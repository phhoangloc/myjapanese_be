// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model User {
  id          Int         @id @default(autoincrement())
  archive     String      @default("user")
  username    String      @unique
  password    String 
  email       String      @unique
  active      Boolean     @default(false)
  position    Role        @default(user)
  createdAt   DateTime    @default(now())
  blog        Blog[]
  file        File[]
  exam        Exam[]
  homeworker  Homework[]
  dohomeworker Dohomework[]
}
enum Role {
  user
  admin
}
model Blog  {
  id                Int           @id @default(autoincrement())
  archive           String        @default("blog")
  hostId            Int
  host              User          @relation(fields: [hostId], references: [id])   
  slug              String        @unique
  content           String        @db.Text
  censor            Boolean       @default(false)
  createdAt         DateTime      @default(now())
  updateDate        DateTime      @default(now())
}
model File {
  id                Int           @id @default(autoincrement())
  archive           String        @default("file")
  type              String        @default("png")
  hostId            Int
  host              User          @relation(fields: [hostId], references: [id])   
  name              String      
  createdAt         DateTime      @default(now())
}
model Exercise {
  id              Int         @id @default(autoincrement())
  archive         String      @default("exercire")
  part            PartRole    @default(chisiki)
  mondai          String      @default("ichi")
  question        String      @db.Text
  choose          String      @db.Text   
  script          String?     @db.Text
  explain         String      @db.Text
  createdAt       DateTime    @default(now())
  exam            ExamExer[]
}
enum PartRole {
  chisiki
  dokkai
  chokai
}
model Exam {
  id              Int         @id @default(autoincrement())
  archive         String      @default("exam")
  hostId          Int
  host            User          @relation(fields: [hostId], references: [id])   
  createdAt       DateTime    @default(now())
  exercise        ExamExer[]
  homeworker      Homework[]
  homeworkerdone  Dohomework[]
}
model ExamExer {
  examId          Int
  exerId          Int
  exam            Exam        @relation(fields: [examId], references: [id])   
  exer            Exercise    @relation(fields: [exerId], references: [id])   
  @@id([examId, exerId])
}
model Homework{
  examId          Int
  userId          Int
  exam            Exam        @relation(fields: [examId], references: [id])   
  user            User        @relation(fields: [userId], references: [id])   
  @@id([examId, userId])
}
model Dohomework{
  examId          Int
  userId          Int
  exam            Exam        @relation(fields: [examId], references: [id])   
  user            User        @relation(fields: [userId], references: [id])   
  answers         String?
  createdAt       DateTime    @default(now())
  @@id([examId, userId])
}